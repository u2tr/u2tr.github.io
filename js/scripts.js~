function signup(url) {
  pw = document.forms['signup']['password'].value.trim();
  email = document.forms['signup']['email'].value.trim();
  phone = document.forms['signup']['phone'].value.trim();
  fname = document.forms['signup']['FName'].value.trim();
  lname = document.forms['signup']['LName'].value.trim();
  classes = document.forms['signup']['bio'].value.trim();
  ed = document.forms['signup']['education'].value.trim();
  name = fname + " " + lname;
  var user = new Parse.User();
  user.set("username", email);
  user.set("password", pw);
  user.set("email", email);
  user.set("phone", phone);
  user.set("name", name);
  user.set("url", url);
  user.set("classes", classes);
  user.set("street", street);
  user.set("city", city);
  user.set("state", state);
  user.set("zip", zip);
  user.set("education", ed);
  if (document.forms['signup']['mentor'].value == "mentor") {
    user.set("Mentor", true);
  }
  else {
    user.set("Mentor", false);
  }
  user.signUp(null, {
    success: function (user) {
      window.location = "testhome.html";
    },
    error: function (user, error) {
      // Show the error message somewhere and let the user try again.
      alert("Error: " + error.code + " " + error.message);
    }
  });
}

function signin() {
  var users = Parse.Object.extend("_User");
  var query = new Parse.Query(users);
  query.ascending("name");
  query.limit(5);
  query.find({
    success: function (results) {
      // Do something with the returned Parse.Object values
      for (var i = 0; i < results.length; i++) {
        var object = results[i];
        if (object.get('email') == document.forms['login']['email'].value.trim() && object.get('emailVerified') == false) {
          alert("Sorry, please confirm your e-mail address before going in");
          window.location = "index.html";
          Parse.User.logOut();
        }
      }
    },
    error: function (error) {
      alert("Error: " + error.code + " " + error.message);
    }
  });

  Parse.User.logIn(document.forms['login']['email'].value.trim(), document.forms['login']['password'].value.trim(), {
    success: function (user) {
      window.location = "testhome.html";
    },
    error: function (user, error) {
      if (error.code == "101" || error.code == 101) {
        alert("Sorry, please check your credentials to make sure they are accurate");
      }
    }
  });
}
var file;

function handleFileSelect(e) {
  var files = e.target.files || e.dataTransfer.files;
  // Our file var now holds the selected file
  file = files[0];
}
  

// Set an event listener on the Choose File field.
$('#files').bind("change", function (e) {
  var files = e.target.files || e.dataTransfer.files;
  // Our file var now holds the selected file
  file = files[0];
  console.log('swag');
});

// This function is called when the user clicks on Upload to Parse. It will create the REST API request to upload this image to Parse.
function signuporiginal() {
  var pw = document.forms['signup']['password'].value;
  var pwc = document.forms['signup']['password-confirm'].value;
  console.log(pw);
  if (pw == pwc) {
    var serverUrl = 'https://api.parse.com/1/files/' + file.name;
    $.ajax({
      type: "POST",
      beforeSend: function (request) {
        request.setRequestHeader("X-Parse-Application-Id", 'Hx13dvXcISIEDbus38pp4Dbat8lyHdCJrrqTIvsy');
        request.setRequestHeader("X-Parse-REST-API-Key", 'obRFvpZMz6ThjQcW7aLZjp175DtD9wxIbrP8IG1k');
        request.setRequestHeader("Content-Type", file.type);
      },
      url: serverUrl,
      data: file,
      processData: false,
      contentType: false,
      success: function (data) {
        console.log(data.url);
        signup(data.url);
      },
      error: function (data) {
        var obj = jQuery.parseJSON(data);
        alert(obj.error);
      }
    });
  }
  else {
    alert("Sorry, your passwords didn't match");
  }
}

function validate() {
  var user = Parse.User.current();
  if (!user) {
    window.location = "index.html";
  }
  else {
    userdata();
  }
}

function userdata() {
  var user = Parse.User.current();
  $(".infodiv").append("<img src=\"" + user.get('url') + "\" height=\"200\" width=\"200\" style=\"border-radius:50%\">");
  $("#nameofperson").append("" + user.get('name') + " &middot; eduCommit");
  $(".infodiv").append("<h3>" + user.get('rating') + "/5 (" + user.get('numrating') + " ratings)");
  document.getElementById("profpicbg").style.background = "url(" + user.get('url') + ") no-repeat center center";
  document.getElementById("profpicbg").style.backgroundSize = "cover";
  $("#phone").append(user.get('phone'));
  $("#email").append(user.get('email'));
  $("#address").append(user.get('city') + ", " + user.get('state'))
  $("#featurestext").append(user.get('classes'));
  $(".infodiv").append("");
  $("#education").append(user.get('education'));
  console.log(user.get('classes'));
  var users = Parse.Object.extend('_User');
  var query = new Parse.Query(users);
  query.find({
    success: function (results) {
      // Do something with the returned Parse.Object values
      var people = [];
      var users = [];
      for (var i = 0; i < results.length; i++) {
        var object = results[i];
        if (object.get('Mentor') != user.get('Mentor')) {
          $("#list").append('<section class="section--center mdl-grid mdl-grid--no-spacing mdl-shadow--2dp" id="aboutme"><header class="section__play-btn mdl-cell mdl-cell--3-col-desktop mdl-cell--2-col-tablet mdl-cell--4-col-phone mdl-color-text--white" id="profpicbg" style="background-image:url(' + object.get('url') + ');background-size:cover"></header><div class="mdl-card mdl-cell mdl-cell--9-col-desktop mdl-cell--6-col-tablet mdl-cell--4-col-phone"><div class="mdl-card__supporting-text"><h4 id="featureshead">' + object.get('name') + '</h4><p id="featurestext">' + object.get('classes') + '</p><strong><p><span id="' + i + '"></span> in ' + object.get('city') + ', ' + object.get('state') + '</p><a href="interact.html#' + object.id + '"><p>Start Chat</p></a></strong></div></div><div class="mdl-card__actions"><a href="user.html#' + object.id + '" class="mdl-button">View more details</a></div></section>');
          people = object.get('zip');
          users = user.get('zip');
          console.log(distance(people, users, i));
          distance(people, users, i);
        }
      }
    },
    error: function (error) {
      alert("Error: " + error.code + " " + error.message);
    }
  });
}

function logout() {
  Parse.User.logOut();
  window.location = "testhome.html";
}

function checkSubmitin(e) {
  if (e && e.keyCode == 13) {
    signin();
  }
}

function checkSubmitup(e) {
  if (e && e.keyCode == 13) {
    signuporiginal();
  }
}

function checkSubmitupmentee(e) {
  if (e && e.keyCode == 13) {
    signupmentee();
  }
}

function checkSubmitinmentee(e) {
  if (e && e.keyCode == 13) {
    signin();
  }
}
function data() {
  var id = window.location.hash.substr(1);
  if (id == "") {
    window.location = "index.html"
  }
  var users = Parse.Object.extend('_User');
  var query = new Parse.Query(users);
  var user = Parse.User.current();
  query.find({
    success: function (results) {
      // Do something with the returned Parse.Object values
      var people;
      var users;
      var n;
      for (var i = 0; i < results.length; i++) {
        var object = results[i];
        if (object.id == id) {
          $(".infodiv").append("<img src=\"" + object.get('url') + "\" height=\"200\" width=\"200\" style=\"border-radius:50%\">");
          $("#nameofperson").append("" + object.get('name') + "");
          $(".infodiv").append("<h3>" + object.get('rating') + "/5 (" + object.get('numrating') + " ratings)");
          document.getElementById("profpicbg").style.background = "url(" + object.get('url') + ") no-repeat center center";
          document.getElementById("profpicbg").style.backgroundSize = "cover";
          $("#phone").append(object.get('phone'));
          $("#email").append(object.get('email'));
          $("#address").append(object.get('city') + ", " + object.get('state') + ", " + object.get('zip'))
          $("#featurestext").append(object.get('classes') + "<br>");
          $(".infodiv").append("");
          $("#education").append(object.get('education'));
          people = object.get('zip');
          users = user.get('zip');
          n = object.id;
        }
      }
      console.log(people);
      console.log(users);
      console.log(n);
      distance(people, users, n);
    },
    error: function (error) {
      console.log("Error: " + error.code + " " + error.message);
    }
  });
}

function signupmentee() {
  var pw = $("#signup-password").val();
  var pwc = $("#login-passwordc").val();
  console.log(pw);
  if (pw == pwc) {
    var serverUrl = 'https://api.parse.com/1/files/' + file.name;
    $.ajax({
      type: "POST",
      beforeSend: function (request) {
        request.setRequestHeader("X-Parse-Application-Id", 'Hx13dvXcISIEDbus38pp4Dbat8lyHdCJrrqTIvsy');
        request.setRequestHeader("X-Parse-REST-API-Key", 'obRFvpZMz6ThjQcW7aLZjp175DtD9wxIbrP8IG1k');
        request.setRequestHeader("Content-Type", file.type);
      },
      url: serverUrl,
      data: file,
      processData: false,
      contentType: false,
      success: function (data) {
        console.log(data.url);
        pw = $("#signup-password").val().trim();
        email = $("#login-email").val().trim();
        phone = $("#login-phone").val().trim();
        fname = $("#login-fname").val().trim();
        lname = $("#login-lname").val().trim();
        classes = $("#login-classes").val();
        street = $("#login-street").val();
        city = $("#login-city").val();
        state = $("#login-state").val();
        zip = $("#login-zip").val();
        ed = $("#login-education").val();
        name = fname + " " + lname;
        alert(name);
        var user = new Parse.User();
        user.set("username", email);
        user.set("password", pw);
        user.set("email", email);
        user.set("phone", phone);
        user.set("name", name);
        user.set("url", data.url);
        user.set("classes", classes);
        user.set("city", city);
        user.set("state", state);
        user.set("zip", zip);
        user.set("education", ed);
        user.set("Mentor", false);
        user.signUp(null, {
          success: function (user) {
            window.location = "testhome.html";
          },
          error: function (user, error) {
            // Show the error message somewhere and let the user try again.
            alert("Error: " + error.code + " " + error.message);
          }
        });
      },
      error: function (data) {
        var obj = jQuery.parseJSON(data);
        alert(obj.error);
      }
    });
  }
  else {
    alert("Sorry, your passwords didn't match");
  }
}

function mentormentee() {
  var user = Parse.User.current();
  if (user.get('Mentor')) {
    $("#nav").append('<a href="#mentorlist" class="mentorormentee mdl-layout__tab">Mentees</a>');
    $("#nav").append('<a class="mdl-layout__tab" onclick="logout()">Log Out</a>');
    $("#nav1").append('<a href="#mentorlist" class="mdl-navigation__link" id="listem" onclick="listem()">Mentees</a>');
    $("#nav1").append('<a href="#mentorlist" class="mdl-navigation__link" onclick="logout()">Log Out</a>');
  }
  else {
    $("#nav").append('<a href="#mentorlist" class="mentorormentee mdl-layout__tab">Mentors</a>');
    $("#nav").append('<a class="mdl-layout__tab" onclick="logout()">Log Out</a>');
    $("#nav1").append('<a href="#mentorlist" class="mdl-navigation__link mentorormentee" id="listem" onclick="listem()">Mentors</a>');
    $("#nav1").append('<a href="#mentorlist" class="mdl-navigation__link" onclick="logout()">Log Out</a>');
  }
}

function editpic() {

}

function editbio() {
  var bio = prompt("Please enter a new bio");
  var user = Parse.User.current();
  user.save("classes", bio);
}

function callback(response, status) {
  alert('swag')
}

function distance(people, users, n) {
  var service = new google.maps.DistanceMatrixService();
  return service.getDistanceMatrix(
    {
      origins: [people],
      destinations: [users],
      travelMode: google.maps.TravelMode.DRIVING,
      unitSystem: google.maps.UnitSystem.IMPERIAL,
      avoidHighways: false,
      avoidTolls: false
    },
    function (response, status) {
      if (status != google.maps.DistanceMatrixStatus.OK) {
        console.log('Error was: ' + status);
      } else {
        var origins = response.originAddresses;
        var destinations = response.destinationAddresses;
        var outputDiv = document.getElementById('outputDiv');
        outputDiv.innerHTML = '';
        for (var a = 0; a < origins.length; a++) {
          var responses = response.rows[a].elements;
          for (var j = 0; j < responses.length; j++) {
            document.getElementById(n).innerHTML = responses[j].distance.text + " away";
          }
        }
      }
    });
}

function listem() {
  $("#mentorlist").addClass("is-active");
  $("#overview").removeClass("is-active");
}

function gohome() {
  $("#overview").addClass("is-active");
  $("#mentorlist").removeClass("is-active");
}

var user = Parse.User.current();
var enduser = window.location.hash.substr(1);
var myDataRef = new Firebase('https://educommit.firebaseIO.com/');

myDataRef.on('child_added', function (snapshot) {
  var message = snapshot.val();
  if ((message.email == user.id && message.name == enduser) || (message.name == user.id && message.email == enduser)) {
    if (message.name == user.id) {
      displayChatMessage("You", message.text, message.email);
    }
    else {
      var UserInfo = Parse.Object.extend("_User");
      var query = new Parse.Query(UserInfo);
      query.get(window.location.hash.substr(1), {
        success: function (object) {
          recname = object.get('name');
          displayChatMessage(recname, message.text, message.email);
        },
        error: function (object, error) {
          alert("Sorry, something went wrong")
        }
      });
    }
  }
});

var UserInfo = Parse.Object.extend("_User");
var query = new Parse.Query(UserInfo);
query.get(window.location.hash.substr(1), {
  success: function(object) {
    name = object.get('name');
    $("#chattingwith").append("Chatting with "+name)
  },  
  error: function(object, error)
  {
    alert("sorry, something went wrong");
  }
})

function displayChatMessage(name, text, recipient) {
  var user = Parse.User.current;
  if(name == "You" && recipient == window.location.hash.substr(1))
  {
    $("#messagesDiv").append("<div class='blue' align='left'>"+text+"</div><br>")
  } 
  else if(name == enduser && recipient == user.id)
  {
    $("#messagesDiv").append("<div class='grey' align='right'>"+text+"</div><br>")
  }
  $('#messagesDiv')[0].scrollTop = $('#messagesDiv')[0].scrollHeight;
};

$('#messageInput').keypress(function (e) {
  if (e.keyCode == 13) {
    var name = user.id;
    var recipient = enduser;
    var text = $('#messageInput').val();
    myDataRef.push({ name: name, text: text, email: recipient });
    alert(enduser)
  }
});
